#!/bin/sh

SCENARIO_CFG=$1
if [ -z "$SCENARIO_CFG" ]
then
  echo Scenario config not specified
  exit 1
else
  #convert to the absolute path
  export MQTT_LOAD_SCENARIO_CONFIG_PATH=`realpath $SCENARIO_CFG`
fi

set -e
SCRIPT_DIR=`realpath $(dirname "$0")`
PROJECT_DIR=$SCRIPT_DIR/../..
cd $PROJECT_DIR

export MQTT_LOAD_SERVER=localhost:1883
export MQTT_LOAD_KAFKA_BOOTSTRAP_SERVERS=localhost:9092

export MQTT_LOAD_PERSISTENT_SESSION=true

export MQTT_LOAD_STATS_UPLOADING_INTERVAL_MILLIS=5000
#export MQTT_LOAD_STATS_UPLOADING_INTERVAL_MILLIS=10000
export MQTT_LOAD_STATS_PRINTING_INTERVAL_MILLIS=5000
#export MQTT_LOAD_STATS_PRINTING_INTERVAL_MILLIS=10000
export MQTT_LOAD_STATS_ERRORS_DETECTION_LOOP_INTERVAL_MILLIS=5000
export MQTT_LOAD_STATS_CONSIDER_MESSAGE_MISSING_TIMEOUT_MILLIS=5000

export MQTT_LOAD_STATS_PORT=8080

export MQTT_LOAD_HAZELCAST_SEED_MEMBERS=localhost:5801

#export MQTT_LOAD_COMPLETION_TIMEOUT_MILLIS=10000
export MQTT_LOAD_COMPLETION_TIMEOUT_MILLIS=30000
#export MQTT_LOAD_COMPLETION_TIMEOUT_MILLIS=30000
export MQTT_LOAD_STATS_INDIVIDUAL_MESSAGE_TRACKING=false
#export MQTT_LOAD_STATS_INDIVIDUAL_MESSAGE_TRACKING=true

export MQTT_LOAD_EXPECTED_RUNNER_NODES_COUNT=1
export MQTT_LOAD_EXPECTED_AGGREGATOR_NODES_COUNT=0
#export MQTT_LOAD_EXPECTED_AGGREGATOR_NODES_COUNT=1

#export MQTT_LOAD_PUBLISH_DUPLICATE_PERCENTAGE=20
#export MQTT_LOAD_PUBLISH_MISSED_PERCENTAGE=30
#export MQTT_LOAD_PUBLISH_MISSED_PERCENTAGE=10
#export MQTT_LOAD_RECEIVE_DUPLICATE_PERCENTAGE=10
#export MQTT_LOAD_RECEIVE_MISSED_PERCENTAGE=15


LOGBACK_CONFIG=$SCRIPT_DIR/logback_to_stdout.xml

sbt -Dhazelcast.diagnostics.enabled=false -Dlogback.configurationFile=$LOGBACK_CONFIG "runMain io.simplematter.mqtttestsuite.TestSuiteRunner"

#cd $PROJECT_DIR
#sbt assembly
#MQTT_TEST_SUITE_VERSION=`sbt -Dsbt.supershell=false -error "print version"`
#
#java -Dhazelcast.diagnostics.enabled=false -Dlogback.configurationFile=$LOGBACK_CONFIG -jar target/scala-3.1.3/simplematter-mqtt-test-suite-assembly-${MQTT_TEST_SUITE_VERSION}.jar

